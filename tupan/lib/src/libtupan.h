
void
phi_kernel(
	uint_t const ni,
	real_t const * restrict __im,
	real_t const * restrict __irx,
	real_t const * restrict __iry,
	real_t const * restrict __irz,
	real_t const * restrict __ie2,
	uint_t const nj,
	real_t const * restrict __jm,
	real_t const * restrict __jrx,
	real_t const * restrict __jry,
	real_t const * restrict __jrz,
	real_t const * restrict __je2,
	real_t * restrict __iphi);

void
acc_kernel(
	uint_t const ni,
	real_t const * restrict __im,
	real_t const * restrict __irx,
	real_t const * restrict __iry,
	real_t const * restrict __irz,
	real_t const * restrict __ie2,
	uint_t const nj,
	real_t const * restrict __jm,
	real_t const * restrict __jrx,
	real_t const * restrict __jry,
	real_t const * restrict __jrz,
	real_t const * restrict __je2,
	real_t * restrict __iax,
	real_t * restrict __iay,
	real_t * restrict __iaz);

void
acc_jerk_kernel(
	uint_t const ni,
	real_t const * restrict __im,
	real_t const * restrict __irx,
	real_t const * restrict __iry,
	real_t const * restrict __irz,
	real_t const * restrict __ie2,
	real_t const * restrict __ivx,
	real_t const * restrict __ivy,
	real_t const * restrict __ivz,
	uint_t const nj,
	real_t const * restrict __jm,
	real_t const * restrict __jrx,
	real_t const * restrict __jry,
	real_t const * restrict __jrz,
	real_t const * restrict __je2,
	real_t const * restrict __jvx,
	real_t const * restrict __jvy,
	real_t const * restrict __jvz,
	real_t * restrict __iax,
	real_t * restrict __iay,
	real_t * restrict __iaz,
	real_t * restrict __ijx,
	real_t * restrict __ijy,
	real_t * restrict __ijz);

void
snap_crackle_kernel(
	uint_t const ni,
	real_t const * restrict __im,
	real_t const * restrict __irx,
	real_t const * restrict __iry,
	real_t const * restrict __irz,
	real_t const * restrict __ie2,
	real_t const * restrict __ivx,
	real_t const * restrict __ivy,
	real_t const * restrict __ivz,
	real_t const * restrict __iax,
	real_t const * restrict __iay,
	real_t const * restrict __iaz,
	real_t const * restrict __ijx,
	real_t const * restrict __ijy,
	real_t const * restrict __ijz,
	uint_t const nj,
	real_t const * restrict __jm,
	real_t const * restrict __jrx,
	real_t const * restrict __jry,
	real_t const * restrict __jrz,
	real_t const * restrict __je2,
	real_t const * restrict __jvx,
	real_t const * restrict __jvy,
	real_t const * restrict __jvz,
	real_t const * restrict __jax,
	real_t const * restrict __jay,
	real_t const * restrict __jaz,
	real_t const * restrict __jjx,
	real_t const * restrict __jjy,
	real_t const * restrict __jjz,
	real_t * restrict __isx,
	real_t * restrict __isy,
	real_t * restrict __isz,
	real_t * restrict __icx,
	real_t * restrict __icy,
	real_t * restrict __icz);

void
tstep_kernel(
	uint_t const ni,
	real_t const * restrict __im,
	real_t const * restrict __irx,
	real_t const * restrict __iry,
	real_t const * restrict __irz,
	real_t const * restrict __ie2,
	real_t const * restrict __ivx,
	real_t const * restrict __ivy,
	real_t const * restrict __ivz,
	uint_t const nj,
	real_t const * restrict __jm,
	real_t const * restrict __jrx,
	real_t const * restrict __jry,
	real_t const * restrict __jrz,
	real_t const * restrict __je2,
	real_t const * restrict __jvx,
	real_t const * restrict __jvy,
	real_t const * restrict __jvz,
	real_t const eta,
	real_t * restrict __idt_a,
	real_t * restrict __idt_b);

void
pnacc_kernel(
	uint_t const ni,
	real_t const * restrict __im,
	real_t const * restrict __irx,
	real_t const * restrict __iry,
	real_t const * restrict __irz,
	real_t const * restrict __ie2,
	real_t const * restrict __ivx,
	real_t const * restrict __ivy,
	real_t const * restrict __ivz,
	uint_t const nj,
	real_t const * restrict __jm,
	real_t const * restrict __jrx,
	real_t const * restrict __jry,
	real_t const * restrict __jrz,
	real_t const * restrict __je2,
	real_t const * restrict __jvx,
	real_t const * restrict __jvy,
	real_t const * restrict __jvz,
	CLIGHT const * restrict clight,
	real_t * restrict __ipnax,
	real_t * restrict __ipnay,
	real_t * restrict __ipnaz);

void
nreg_Xkernel(
	uint_t const ni,
	real_t const * restrict __im,
	real_t const * restrict __irx,
	real_t const * restrict __iry,
	real_t const * restrict __irz,
	real_t const * restrict __ie2,
	real_t const * restrict __ivx,
	real_t const * restrict __ivy,
	real_t const * restrict __ivz,
	uint_t const nj,
	real_t const * restrict __jm,
	real_t const * restrict __jrx,
	real_t const * restrict __jry,
	real_t const * restrict __jrz,
	real_t const * restrict __je2,
	real_t const * restrict __jvx,
	real_t const * restrict __jvy,
	real_t const * restrict __jvz,
	real_t const dt,
	real_t * restrict __idrx,
	real_t * restrict __idry,
	real_t * restrict __idrz,
	real_t * restrict __iax,
	real_t * restrict __iay,
	real_t * restrict __iaz,
	real_t * restrict __iu);

void
nreg_Vkernel(
	uint_t const ni,
	real_t const * restrict __im,
	real_t const * restrict __ivx,
	real_t const * restrict __ivy,
	real_t const * restrict __ivz,
	real_t const * restrict __iax,
	real_t const * restrict __iay,
	real_t const * restrict __iaz,
	uint_t const nj,
	real_t const * restrict __jm,
	real_t const * restrict __jvx,
	real_t const * restrict __jvy,
	real_t const * restrict __jvz,
	real_t const * restrict __jax,
	real_t const * restrict __jay,
	real_t const * restrict __jaz,
	real_t const dt,
	real_t * restrict __idvx,
	real_t * restrict __idvy,
	real_t * restrict __idvz,
	real_t * restrict __ik);

void
sakura_kernel(
	uint_t const ni,
	real_t const * restrict __im,
	real_t const * restrict __irx,
	real_t const * restrict __iry,
	real_t const * restrict __irz,
	real_t const * restrict __ie2,
	real_t const * restrict __ivx,
	real_t const * restrict __ivy,
	real_t const * restrict __ivz,
	uint_t const nj,
	real_t const * restrict __jm,
	real_t const * restrict __jrx,
	real_t const * restrict __jry,
	real_t const * restrict __jrz,
	real_t const * restrict __je2,
	real_t const * restrict __jvx,
	real_t const * restrict __jvy,
	real_t const * restrict __jvz,
	real_t const dt,
	int_t const flag,
	real_t * restrict __idrx,
	real_t * restrict __idry,
	real_t * restrict __idrz,
	real_t * restrict __idvx,
	real_t * restrict __idvy,
	real_t * restrict __idvz);

void
kepler_solver_kernel(
	uint_t const ni,
	real_t const * restrict __im,
	real_t const * restrict __irx,
	real_t const * restrict __iry,
	real_t const * restrict __irz,
	real_t const * restrict __ie2,
	real_t const * restrict __ivx,
	real_t const * restrict __ivy,
	real_t const * restrict __ivz,
	uint_t const nj,
	real_t const * restrict __jm,
	real_t const * restrict __jrx,
	real_t const * restrict __jry,
	real_t const * restrict __jrz,
	real_t const * restrict __je2,
	real_t const * restrict __jvx,
	real_t const * restrict __jvy,
	real_t const * restrict __jvz,
	real_t const dt,
	real_t * restrict __ir1x,
	real_t * restrict __ir1y,
	real_t * restrict __ir1z,
	real_t * restrict __iv1x,
	real_t * restrict __iv1y,
	real_t * restrict __iv1z,
	real_t * restrict __jr1x,
	real_t * restrict __jr1y,
	real_t * restrict __jr1z,
	real_t * restrict __jv1x,
	real_t * restrict __jv1y,
	real_t * restrict __jv1z);

