
void
phi_kernel(
    UINT const ni,
    REAL const * restrict __im,
    REAL const * restrict __irx,
    REAL const * restrict __iry,
    REAL const * restrict __irz,
    REAL const * restrict __ie2,
    UINT const nj,
    REAL const * restrict __jm,
    REAL const * restrict __jrx,
    REAL const * restrict __jry,
    REAL const * restrict __jrz,
    REAL const * restrict __je2,
    REAL * restrict __iphi);

void
acc_kernel(
    UINT const ni,
    REAL const * restrict __im,
    REAL const * restrict __irx,
    REAL const * restrict __iry,
    REAL const * restrict __irz,
    REAL const * restrict __ie2,
    UINT const nj,
    REAL const * restrict __jm,
    REAL const * restrict __jrx,
    REAL const * restrict __jry,
    REAL const * restrict __jrz,
    REAL const * restrict __je2,
    REAL * restrict __iax,
    REAL * restrict __iay,
    REAL * restrict __iaz);

void
acc_jerk_kernel(
    UINT const ni,
    REAL const * restrict __im,
    REAL const * restrict __irx,
    REAL const * restrict __iry,
    REAL const * restrict __irz,
    REAL const * restrict __ie2,
    REAL const * restrict __ivx,
    REAL const * restrict __ivy,
    REAL const * restrict __ivz,
    UINT const nj,
    REAL const * restrict __jm,
    REAL const * restrict __jrx,
    REAL const * restrict __jry,
    REAL const * restrict __jrz,
    REAL const * restrict __je2,
    REAL const * restrict __jvx,
    REAL const * restrict __jvy,
    REAL const * restrict __jvz,
    REAL * restrict __iax,
    REAL * restrict __iay,
    REAL * restrict __iaz,
    REAL * restrict __ijx,
    REAL * restrict __ijy,
    REAL * restrict __ijz);

void
snap_crackle_kernel(
    UINT const ni,
    REAL const * restrict __im,
    REAL const * restrict __irx,
    REAL const * restrict __iry,
    REAL const * restrict __irz,
    REAL const * restrict __ie2,
    REAL const * restrict __ivx,
    REAL const * restrict __ivy,
    REAL const * restrict __ivz,
    REAL const * restrict __iax,
    REAL const * restrict __iay,
    REAL const * restrict __iaz,
    REAL const * restrict __ijx,
    REAL const * restrict __ijy,
    REAL const * restrict __ijz,
    UINT const nj,
    REAL const * restrict __jm,
    REAL const * restrict __jrx,
    REAL const * restrict __jry,
    REAL const * restrict __jrz,
    REAL const * restrict __je2,
    REAL const * restrict __jvx,
    REAL const * restrict __jvy,
    REAL const * restrict __jvz,
    REAL const * restrict __jax,
    REAL const * restrict __jay,
    REAL const * restrict __jaz,
    REAL const * restrict __jjx,
    REAL const * restrict __jjy,
    REAL const * restrict __jjz,
    REAL * restrict __isx,
    REAL * restrict __isy,
    REAL * restrict __isz,
    REAL * restrict __icx,
    REAL * restrict __icy,
    REAL * restrict __icz);

void
tstep_kernel(
    UINT const ni,
    REAL const * restrict __im,
    REAL const * restrict __irx,
    REAL const * restrict __iry,
    REAL const * restrict __irz,
    REAL const * restrict __ie2,
    REAL const * restrict __ivx,
    REAL const * restrict __ivy,
    REAL const * restrict __ivz,
    UINT const nj,
    REAL const * restrict __jm,
    REAL const * restrict __jrx,
    REAL const * restrict __jry,
    REAL const * restrict __jrz,
    REAL const * restrict __je2,
    REAL const * restrict __jvx,
    REAL const * restrict __jvy,
    REAL const * restrict __jvz,
    REAL const eta,
    REAL * restrict __idt_a,
    REAL * restrict __idt_b);

void
pnacc_kernel(
    UINT const ni,
    REAL const * restrict __im,
    REAL const * restrict __irx,
    REAL const * restrict __iry,
    REAL const * restrict __irz,
    REAL const * restrict __ie2,
    REAL const * restrict __ivx,
    REAL const * restrict __ivy,
    REAL const * restrict __ivz,
    UINT const nj,
    REAL const * restrict __jm,
    REAL const * restrict __jrx,
    REAL const * restrict __jry,
    REAL const * restrict __jrz,
    REAL const * restrict __je2,
    REAL const * restrict __jvx,
    REAL const * restrict __jvy,
    REAL const * restrict __jvz,
    UINT order,
    REAL const inv1,
    REAL const inv2,
    REAL const inv3,
    REAL const inv4,
    REAL const inv5,
    REAL const inv6,
    REAL const inv7,
    REAL * restrict __ipnax,
    REAL * restrict __ipnay,
    REAL * restrict __ipnaz);

void
nreg_Xkernel(
    UINT const ni,
    REAL const * restrict __im,
    REAL const * restrict __irx,
    REAL const * restrict __iry,
    REAL const * restrict __irz,
    REAL const * restrict __ie2,
    REAL const * restrict __ivx,
    REAL const * restrict __ivy,
    REAL const * restrict __ivz,
    UINT const nj,
    REAL const * restrict __jm,
    REAL const * restrict __jrx,
    REAL const * restrict __jry,
    REAL const * restrict __jrz,
    REAL const * restrict __je2,
    REAL const * restrict __jvx,
    REAL const * restrict __jvy,
    REAL const * restrict __jvz,
    REAL const dt,
    REAL * restrict __idrx,
    REAL * restrict __idry,
    REAL * restrict __idrz,
    REAL * restrict __iax,
    REAL * restrict __iay,
    REAL * restrict __iaz,
    REAL * restrict __iu);

void
nreg_Vkernel(
    UINT const ni,
    REAL const * restrict __im,
    REAL const * restrict __ivx,
    REAL const * restrict __ivy,
    REAL const * restrict __ivz,
    REAL const * restrict __iax,
    REAL const * restrict __iay,
    REAL const * restrict __iaz,
    UINT const nj,
    REAL const * restrict __jm,
    REAL const * restrict __jvx,
    REAL const * restrict __jvy,
    REAL const * restrict __jvz,
    REAL const * restrict __jax,
    REAL const * restrict __jay,
    REAL const * restrict __jaz,
    REAL const dt,
    REAL * restrict __idvx,
    REAL * restrict __idvy,
    REAL * restrict __idvz,
    REAL * restrict __ik);

void
sakura_kernel(
    UINT const ni,
    REAL const * restrict __im,
    REAL const * restrict __irx,
    REAL const * restrict __iry,
    REAL const * restrict __irz,
    REAL const * restrict __ie2,
    REAL const * restrict __ivx,
    REAL const * restrict __ivy,
    REAL const * restrict __ivz,
    UINT const nj,
    REAL const * restrict __jm,
    REAL const * restrict __jrx,
    REAL const * restrict __jry,
    REAL const * restrict __jrz,
    REAL const * restrict __je2,
    REAL const * restrict __jvx,
    REAL const * restrict __jvy,
    REAL const * restrict __jvz,
    REAL const dt,
    INT const flag,
    REAL * restrict __idrx,
    REAL * restrict __idry,
    REAL * restrict __idrz,
    REAL * restrict __idvx,
    REAL * restrict __idvy,
    REAL * restrict __idvz);

void
kepler_solver_kernel(
    UINT const ni,
    REAL const * restrict __im,
    REAL const * restrict __irx,
    REAL const * restrict __iry,
    REAL const * restrict __irz,
    REAL const * restrict __ie2,
    REAL const * restrict __ivx,
    REAL const * restrict __ivy,
    REAL const * restrict __ivz,
    UINT const nj,
    REAL const * restrict __jm,
    REAL const * restrict __jrx,
    REAL const * restrict __jry,
    REAL const * restrict __jrz,
    REAL const * restrict __je2,
    REAL const * restrict __jvx,
    REAL const * restrict __jvy,
    REAL const * restrict __jvz,
    REAL const dt,
    REAL * restrict __ir1x,
    REAL * restrict __ir1y,
    REAL * restrict __ir1z,
    REAL * restrict __iv1x,
    REAL * restrict __iv1y,
    REAL * restrict __iv1z,
    REAL * restrict __jr1x,
    REAL * restrict __jr1y,
    REAL * restrict __jr1z,
    REAL * restrict __jv1x,
    REAL * restrict __jv1y,
    REAL * restrict __jv1z);

